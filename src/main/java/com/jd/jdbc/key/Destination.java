/*
Copyright 2021 JD Project Authors. Licensed under Apache-2.0.

Copyright 2019 The Vitess Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package com.jd.jdbc.key;

import io.vitess.proto.Topodata.ShardReference;
import java.sql.SQLException;
import java.util.List;

/**
 * Destination is an interface definition for a query destination,
 * within a given Keyspace / Tablet Type. It is meant to be an internal
 * data structure, with multiple possible implementations.
 * The srvtopo package can resolve Destinations into actual Targets.
 */
public interface Destination {

    /**
     * Resolve calls the callback for every shard Destination
     * resolves into, given the shards list.
     * The returned error must be generated by vterrors.
     *
     * @param allShards List&lt;{@link ShardReference}&gt;
     * @param resolve   {@link DestinationResolve}
     * @throws Exception when an error occurs
     */
    void resolve(List<ShardReference> allShards, DestinationResolve resolve) throws SQLException;

    /**
     * IsUnique returns true if this is a single destination.
     * It returns false if this type can map to multiple destinations.
     * TODO(alainjobart) That is just a method I think will be useful.
     * Mainly, in v3, once we Map(), each returned result should
     * be IsUnique=true for a Unique vindex.
     *
     * @return boolean
     */
    Boolean isUnique();
}
