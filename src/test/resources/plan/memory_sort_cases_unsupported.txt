# Reason: multiple keyspace
# Order by for join, on text column in LHS.
"select u.a, u.textcol1, un.col2 from user u join unsharded un order by u.textcol1, un.col2"
{
  "QueryType": "SELECT",
  "Original": "select u.a, u.textcol1, un.col2 from user u join unsharded un order by u.textcol1, un.col2",
  "Instructions": {
    "OperatorType": "Sort",
    "Variant": "Memory",
    "OrderBy": "3 ASC, 2 ASC",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": [-1,-2,1,-3],
        "TableName": "user_unsharded",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.a, u.textcol1, weight_string(u.textcol1) from user as u where 1 != 1",
            "Query": "select u.a, u.textcol1, weight_string(u.textcol1) from user as u",
            "Table": "user"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectUnsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select un.col2 from unsharded as un where 1 != 1",
            "Query": "select un.col2 from unsharded as un",
            "Table": "unsharded"
          }
        ]
      }
    ]
  }
}

# Reason: multiple keyspace
# Order by for join, on text column in RHS.
"select u.a, u.textcol1, un.col2 from unsharded un join user u order by u.textcol1, un.col2"
{
  "QueryType": "SELECT",
  "Original": "select u.a, u.textcol1, un.col2 from unsharded un join user u order by u.textcol1, un.col2",
  "Instructions": {
    "OperatorType": "Sort",
    "Variant": "Memory",
    "OrderBy": "3 ASC, 2 ASC",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": [1,2,-1,3],
        "TableName": "unsharded_user",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectUnsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select un.col2 from unsharded as un where 1 != 1",
            "Query": "select un.col2 from unsharded as un",
            "Table": "unsharded"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.a, u.textcol1, weight_string(u.textcol1) from user as u where 1 != 1",
            "Query": "select u.a, u.textcol1, weight_string(u.textcol1) from user as u",
            "Table": "user"
          }
        ]
      }
    ]
  }
}

# Reason: Only support binaryhash
# order by for vindex func
"select id, keyspace_id, range_start, range_end from user_index where id = :id order by range_start"
{
  "QueryType": "SELECT",
  "Original": "select id, keyspace_id, range_start, range_end from user_index where id = :id order by range_start",
  "Instructions": {
    "OperatorType": "Sort",
    "Variant": "Memory",
    "OrderBy": "2 ASC",
    "Inputs": [
      {
        "OperatorType": "VindexFunc",
        "Variant": "VindexMap",
        "Columns": [
          0,
          1,
          2,
          3
        ],
        "Fields": {
          "id": "VARBINARY",
          "keyspace_id": "VARBINARY",
          "range_end": "VARBINARY",
          "range_start": "VARBINARY"
        },
        "Value": ":id",
        "Vindex": "user_index"
      }
    ]
  }
}