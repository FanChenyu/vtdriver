[
  {
    "comment": "# ORDER BY uses column numbers",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,1),(2,'key2',1,2),(3,'key3',2,1),(4,'key4',2,1),(5,'key5',3,4),(6,'key6',5,6)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "needSort": false,
    "query": "select f_int from table_engine_test where f_tinyint = 1 order by 1",
    "verifyResult": [
      {
        "f_int": 1
      },
      {
        "f_int": 2
      },
      {
        "f_int": 2
      }
    ]
  },
  {
    "comment": "# ORDER BY uses column numbers",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,2),(2,'key2',1,2),(3,'key3',2,4),(4,'key4',2,4),(5,'key5',3,4),(6,'key6',5,6)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "needSort": false,
    "query": "select f_int from table_engine_test order by f_int",
    "verifyResult": [
      {
        "f_int": 1
      },
      {
        "f_int": 1
      },
      {
        "f_int": 2
      },
      {
        "f_int": 2
      },
      {
        "f_int": 3
      },
      {
        "f_int": 5
      }
    ]
  },
  {
    "comment": "# ORDER BY on scatter with multiple number column",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_midint,f_int) values(1,'key1',1,2,3),(2,'key2',1,2,4),(3,'key3',2,4,6),(4,'key4',2,4,7),(5,'key5',3,4,5),(6,'key6',2,6,1)"
    ],
    "fields": [
      {
        "name": "f_tinyint"
      },
      {
        "name": "f_midint"
      },
      {
        "name": "f_int"
      }
    ],
    "needSort": false,
    "query": "select f_tinyint, f_midint, f_int from table_engine_test order by f_tinyint, f_midint, f_int;",
    "verifyResult": [
      {
        "f_tinyint": 1,
        "f_midint": 2,
        "f_int": 3
      },
      {
        "f_tinyint": 1,
        "f_midint": 2,
        "f_int": 4
      },
      {
        "f_tinyint": 2,
        "f_midint": 4,
        "f_int": 6
      },
      {
        "f_tinyint": 2,
        "f_midint": 4,
        "f_int": 7
      },
      {
        "f_tinyint": 2,
        "f_midint": 6,
        "f_int": 1
      },
      {
        "f_tinyint": 3,
        "f_midint": 4,
        "f_int": 5
      }
    ]
  },
  {
    "comment": "# ORDER BY on scatter with number column, qualified name",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_midint,f_int) values(1,'key1',1,2,3),(2,'key2',1,2,4),(3,'key3',2,4,6),(4,'key4',2,4,7),(5,'key5',3,4,5),(6,'key6',2,6,1)"
    ],
    "fields": [
      {
        "name": "f_tinyint"
      },
      {
        "name": "f_midint"
      },
      {
        "name": "f_int"
      }
    ],
    "needSort": false,
    "query": "select f_tinyint, table_engine_test.f_midint, f_int from table_engine_test order by f_tinyint, f_midint, f_int;",
    "verifyResult": [
      {
        "f_tinyint": 1,
        "f_midint": 2,
        "f_int": 3
      },
      {
        "f_tinyint": 1,
        "f_midint": 2,
        "f_int": 4
      },
      {
        "f_tinyint": 2,
        "f_midint": 4,
        "f_int": 6
      },
      {
        "f_tinyint": 2,
        "f_midint": 4,
        "f_int": 7
      },
      {
        "f_tinyint": 2,
        "f_midint": 6,
        "f_int": 1
      },
      {
        "f_tinyint": 3,
        "f_midint": 4,
        "f_int": 5
      }
    ]
  },
  {
    "comment": "# ORDER BY NULL",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,2),(2,'key2',1,2),(3,'key3',2,4),(4,'key4',2,4),(5,'key5',3,4),(6,'key6',5,6)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "query": "select f_int from table_engine_test order by null;",
    "verifyResult": [
      {
        "f_int": 1
      },
      {
        "f_int": 1
      },
      {
        "f_int": 2
      },
      {
        "f_int": 2
      },
      {
        "f_int": 3
      },
      {
        "f_int": 5
      }
    ]
  },
  {
    "comment": "# ORDER BY RAND()",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,2),(2,'key2',2,2),(3,'key3',4,4),(4,'key4',3,5)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "query": "select f_int from table_engine_test order by RAND()",
    "verifyResult": [
      {
        "f_int": 1
      },
      {
        "f_int": 2
      },
      {
        "f_int": 3
      },
      {
        "f_int": 4
      }
    ]
  },
  {
    "comment": "# Order by, '*' expression",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select * from table_engine_test where f_tinyint = 5 order by f_midint",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: order by must reference a column in the select list"
  },
  {
    "comment": "# Order by, qualified '*' expression",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select table_engine_test.* from table_engine_test where f_tinyint = 5 order by f_midint",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: order by must reference a column in the select list"
  },
  {
    "comment": "# Order by, qualified '*' expression",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select * from table_engine_test where f_tinyint = 5 order by table_engine_test.f_midint",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: order by must reference a column in the select list"
  },
  {
    "comment": "# Order by with math functions",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select * from table_engine_test where f_tinyint = 5 order by -f_midint",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: complex order by expression"
  },
  {
    "comment": "# Order by with math operations",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select * from table_engine_test where f_tinyint = 5 order by f_tinyint + f_varchar collate utf8_general_ci desc",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: complex order by expression"
  },
  {
    "comment": "# Order by with math operations",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "query": "select * from table_engine_test where f_tinyint = 5 order by f_tinyint + f_varchar collate utf8_general_ci desc;",
    "exception": "java.sql.SQLFeatureNotSupportedException",
    "errorMessage": "unsupported: in sharded table query: complex order by expression"
  },
  {
    "comment": "# LIMIT",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_tinyint,f_bit,f_midint,f_int) values(1,'key1',1,false,2,3),(2,'key2',5,false,2,4),(3,'key3',5,true,4,2)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "needSort": false,
    "query": "select f_int from table_engine_test where f_tinyint = 5 order by f_int limit 1;",
    "verifyResult": [
      {
        "f_int": 2
      }
    ]
  },
  {
    "comment": "# limit for scatter",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,2),(2,'key2',1,3),(3,'key3',2,4),(4,'key4',2,4),(5,'key5',3,4),(6,'key6',5,6)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "query": "select f_int from table_engine_test order by f_int limit 1",
    "verifyResult": [
      {
        "f_int": 1
      }
    ]
  },
  {
    "comment": "# cross-shard expression in parenthesis with limit",
    "initSql": [
      "delete from table_engine_test",
      "insert into table_engine_test(id,f_key,f_int,f_tinyint) values(1,'key1',1,2),(2,'key2',1,2),(3,'key2',1,4),(4,'key4',2,4),(5,'key5',3,4),(6,'key6',5,6)"
    ],
    "fields": [
      {
        "name": "f_int"
      }
    ],
    "query": "select f_int from table_engine_test where (f_int = 1 AND f_key ='key2') order by f_int limit 5",
    "verifyResult": [
      {
        "f_int": 1
      },
      {
        "f_int": 1
      }
    ]
  }
]